一：模板模式
        属于行为性设计模式

	定义：
         定义一个算法的骨架，并运行子类为一个或者多个步骤提供实现。

    特点：
        模板方法使得子类可以在不改变算法结构的情况下，重新定义算法的某些步骤

	优点：
		a:提高代码的复用性
		b：提高代码的扩展性
		c：符合开闭原则
	缺点：
	  	a：类数目增多
	  	b：间接地增加了系统实现的复杂度
	  	c:继承关系自身的缺点，如果父类添加新的抽象方法，所以子类都要改一遍。
	应用案例：
           AbstractList
	应用场景：
           a：一次性实现一个算法的不变的部分，并将可变的行为留给子类来实现。
           b：各子类中公共的行为被提取出来并集中到一个公共的父类中，从而避免代码重复。